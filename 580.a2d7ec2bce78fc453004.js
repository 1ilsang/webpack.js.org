(self.webpackChunk=self.webpackChunk||[]).push([[580],{580:function(n,s,a){"use strict";a.r(s),s.default='<p>The <code>ModuleFederationPlugin</code> allows a build to provide or consume modules with other independent builds at runtime.</p> <h3 id="specify-package-versions">Specify package versions<a href="#specify-package-versions" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>There are three ways to specify the versions of shared libraries.</p> <h4 id="array-syntax">Array syntax<a href="#array-syntax" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>This syntax allows you to share libraries with package name only. This approach is good for prototyping, but it will not allow you to scale to large production environment given that libraries like <code>react</code> and <code>react-dom</code> will require additional requirements.</p> <pre><code class="hljs language-js"><span class="token keyword">const</span> <span class="token punctuation">{</span> ModuleFederationPlugin <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'webpack\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>container<span class="token punctuation">;</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">ModuleFederationPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// adds lodash as shared module</span>\n      <span class="token comment">// version is inferred from package.json</span>\n      <span class="token comment">// there is no version check for the required version</span>\n      <span class="token comment">// so it will always use the higher version found</span>\n      shared<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'lodash\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h4 id="object-syntax">Object syntax<a href="#object-syntax" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>This syntax provides you more control over each shared library in which you can define package name as the key and version (<a href="https://semver.org/">semver</a>) as the value.</p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">ModuleFederationPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      shared<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// adds lodash as shared module</span>\n        <span class="token comment">// version is inferred from package.json</span>\n        <span class="token comment">// it will use the highest lodash version that is >= 4.17 and &#x3C; 5</span>\n        lodash<span class="token operator">:</span> <span class="token string">\'^4.17.0\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h4 id="object-syntax-with-sharing-hints">Object syntax with sharing hints<a href="#object-syntax-with-sharing-hints" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p>This syntax allows you to provide additional <a href="#sharing-hints">hints</a> to each shared package where you define the package name as the key, and the value as an object containing hints to modify sharing behavior.</p> <pre><code class="hljs language-js"><span class="token keyword">const</span> deps <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'./package.json\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>dependencies<span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">ModuleFederationPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      shared<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// adds react as shared module</span>\n        <span class="token comment">// version is inferred from package.json</span>\n        <span class="token comment">// it will always use the shared version, but print a warning when the shared lodash is &#x3C; 4.17 or >= 5</span>\n        react<span class="token operator">:</span> <span class="token punctuation">{</span>\n          requiredVersion<span class="token operator">:</span> deps<span class="token punctuation">.</span>lodash<span class="token punctuation">,</span>\n          singleton<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="sharing-hints">Sharing hints<a href="#sharing-hints" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <h4 id="eager"><strong><code>eager</code></strong><a href="#eager" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p><code>boolean</code></p> <p>This hint will allow webpack to include the provided and fallback module directly instead of fetching the library via an asynchronous request. In other words, this allows to use this shared module in the initial chunk. Also, be careful that all provided and fallback modules will always be downloaded when this hint is enabled.</p> <h4 id="import"><strong><code>import</code></strong><a href="#import" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p><code>false | string</code></p> <p>The provided module that should be placed in the shared scope. This provided module also acts as fallback module if no shared module is found in the shared scope or version isn\'t valid. (The value for this hint defaults to the property name.)</p> <h4 id="packagename"><strong><code>packageName</code></strong><a href="#packagename" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p><code>string</code></p> <p>The package name that is used to determine required version from description file. This is only needed when the package name can\'t be automatically determined from request.</p> <h4 id="requiredversion"><strong><code>requiredVersion</code></strong><a href="#requiredversion" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p><code>false | string</code></p> <p>The required version of the package.</p> <h4 id="sharekey"><strong><code>shareKey</code></strong><a href="#sharekey" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p><code>string</code></p> <p>The requested shared module is looked up under this key from the shared scope.</p> <h4 id="sharescope"><strong><code>shareScope</code></strong><a href="#sharescope" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p><code>string</code></p> <p>The name of the shared scope.</p> <h4 id="singleton"><strong><code>singleton</code></strong><a href="#singleton" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p><code>boolean</code></p> <p>This hint only allows a single version of the shared module in the shared scope (disabled by default). Some libraries use a global internal state (e.g. react, react-dom). Thus, it is critical to have only one instance of the library running at a time.</p> <h4 id="strictversion"><strong><code>strictVersion</code></strong><a href="#strictversion" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p><code>boolean</code></p> <p>This hint allows webpack to reject the shared module if version is not valid (defaults to <code>true</code> when local fallback module is available and shared module is not a singleton, otherwise <code>false</code>, it has no effect if there is no required version specified).</p> <h4 id="version"><strong><code>version</code></strong><a href="#version" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <p><code>false | string</code></p> <p>The version of the provided module. It allows webpack to replace lower matching versions, but not higher.</p> <h4 id="additional-examples"><strong>Additional examples</strong><a href="#additional-examples" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h4> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">ModuleFederationPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// adds vue as shared module</span>\n      <span class="token comment">// version is inferred from package.json</span>\n      <span class="token comment">// it will always use the shared version, but print a warning when the shared vue is &#x3C; 2.6.5 or >= 3</span>\n      shared<span class="token operator">:</span> <span class="token punctuation">{</span>\n        vue<span class="token operator">:</span> <span class="token punctuation">{</span>\n          requiredVersion<span class="token operator">:</span> <span class="token string">\'^2.6.5\'</span><span class="token punctuation">,</span>\n          singleton<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">ModuleFederationPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// adds vue as shared module</span>\n      <span class="token comment">// there is no local version provided</span>\n      <span class="token comment">// it will emit a warning if the shared vue is &#x3C; 2.6.5 or >= 3</span>\n      shared<span class="token operator">:</span> <span class="token punctuation">{</span>\n        vue<span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token keyword">import</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n          requiredVersion<span class="token operator">:</span> <span class="token string">\'^2.6.5\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">ModuleFederationPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// adds vue as shared module</span>\n      <span class="token comment">// there is no local version provided</span>\n      <span class="token comment">// it will throw an error when the shared vue is &#x3C; 2.6.5 or >= 3</span>\n      shared<span class="token operator">:</span> <span class="token punctuation">{</span>\n        vue<span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token keyword">import</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n          requiredVersion<span class="token operator">:</span> <span class="token string">\'^2.6.5\'</span><span class="token punctuation">,</span>\n          strictVersion<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">ModuleFederationPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      shared<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'my-vue\'</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token comment">// can be referenced by import "my-vue"</span>\n          <span class="token keyword">import</span><span class="token operator">:</span> <span class="token string">\'vue\'</span><span class="token punctuation">,</span> <span class="token comment">// the "vue" package will be used as a provided and fallback module</span>\n          shareKey<span class="token operator">:</span> <span class="token string">\'shared-vue\'</span><span class="token punctuation">,</span> <span class="token comment">// under this name the shared module will be placed in the share scope</span>\n          shareScope<span class="token operator">:</span> <span class="token string">\'default\'</span><span class="token punctuation">,</span> <span class="token comment">// share scope with this name will be used</span>\n          singleton<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// only a single version of the shared module is allowed</span>\n          strictVersion<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// don\'t use shared version when version isn\'t valid. Singleton or modules without fallback will throw, otherwise fallback is used</span>\n          version<span class="token operator">:</span> <span class="token string">\'1.2.3\'</span><span class="token punctuation">,</span> <span class="token comment">// the version of the shared module</span>\n          requiredVersion<span class="token operator">:</span> <span class="token string">\'^1.0.0\'</span><span class="token punctuation">,</span> <span class="token comment">// the required version of the shared module</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> '}}]);